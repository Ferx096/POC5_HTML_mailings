{
  "name": "Generador HTML Infografías",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "generate-html",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Separar imágenes por tamaño - la más grande es la infografía\nconst files = $input.all()[0].binary;\nconst projectName = $input.all()[0].json.projectName || 'infografia_' + Date.now();\n\n// Validar que existan archivos\nif (!files || Object.keys(files).length === 0) {\n  throw new Error('No se encontraron archivos para procesar');\n}\n\nlet filesSizes = [];\n\n// Calcular tamaño de cada archivo\nObject.keys(files).forEach(key => {\n  try {\n    const fileSize = Buffer.from(files[key].data, 'base64').length;\n    filesSizes.push({\n      name: key,\n      size: fileSize,\n      data: files[key]\n    });\n  } catch (error) {\n    console.error(`Error procesando archivo ${key}:`, error);\n  }\n});\n\n// Ordenar por tamaño descendente (más grande primero)\nfilesSizes.sort((a, b) => b.size - a.size);\n\n// La más grande es la infografía, el resto son elementos\nconst finalInfografia = filesSizes[0];\nconst elementImages = filesSizes.slice(1);\n\n// Preparar binary data para salida\nlet outputBinary = {\n  finalInfografia: finalInfografia.data\n};\n\n// Agregar elementos numerados\nelementImages.forEach((img, index) => {\n  outputBinary[`elemento_${index + 1}`] = img.data;\n});\n\nreturn [{\n  json: {\n    projectName,\n    largestFile: finalInfografia.name,\n    largestSize: (finalInfografia.size / 1024 / 1024).toFixed(2) + 'MB',\n    elementCount: elementImages.length,\n    totalFiles: filesSizes.length,\n    elementSizes: elementImages.map((img, index) => ({\n      name: img.name,\n      newName: `elemento_${index + 1}`,\n      size: (img.size / 1024 / 1024).toFixed(2) + 'MB'\n    })),\n    fileSizeOrder: filesSizes.map(f => ({\n      name: f.name,\n      size: (f.size / 1024 / 1024).toFixed(2) + 'MB'\n    }))\n  },\n  binary: outputBinary\n}];"
      },
      "id": "code-separator",
      "name": "Code - Separar Archivos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "authentication": "oAuth2Api",
        "operation": "create",
        "resource": "folder",
        "siteId": "={{$env.SHAREPOINT_SITE_ID}}",
        "folderPath": "=/Infografias/{{$node['Code - Separar Archivos'].json.projectName}}"
      },
      "id": "sharepoint-create-folder",
      "name": "SharePoint - Crear Carpeta",
      "type": "n8n-nodes-base.microsoftSharePoint",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "split-elements",
      "name": "Split - Elementos",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [900, 300]
    },
    {
      "parameters": {
        "authentication": "oAuth2Api",
        "operation": "upload",
        "resource": "file",
        "siteId": "={{$env.SHAREPOINT_SITE_ID}}",
        "fileName": "={{Object.keys($binary)[0]}}.png",
        "folderPath": "=/Infografias/{{$node['Code - Separar Archivos'].json.projectName}}/images/",
        "binaryData": true
      },
      "id": "sharepoint-upload-elements",
      "name": "SharePoint - Subir Elementos",
      "type": "n8n-nodes-base.microsoftSharePoint",
      "typeVersion": 1,
      "position": [1120, 300]
    },
    {    
        "parameters": {
            "method": "POST",
            "url": "https://api.anthropic.com/v1/messages",
            "authentication": "genericCredentialType",
            "genericAuthType": "httpHeaderAuth",
            "sendHeaders": true,
            "headerParameters": {
            "parameters": [
                {
                "name": "anthropic-version",
                "value": "2023-06-01"
                },
                {
                "name": "content-type",
                "value": "application/json"
                }
            ]
            },
            "sendBody": true,
            "contentType": "json",
            "bodyParameters": {
            "parameters": [
                {
                "name": "model",
                "value": "claude-sonnet-4-20250514"
                },
                {
                "name": "max_tokens",
                "value": 20000
                },
                {
                "name": "messages",
                          "value": "=[{\"role\": \"user\", \"content\": [{\"type\": \"text\", \"text\": \"Genera un email HTML completo basado en las imágenes que te comparto. Sigue estas especificaciones técnicas:\\n\\n### Estructura base requerida:\\n- DOCTYPE XHTML 1.0 Transitional\\n- Tabla principal: 600px de ancho, centrada, bgcolor=\\\"#FFF\\\"\\n- Fuente principal: Arial, Helvetica, sans-serif\\n- Colores corporativos: #FF4F00 (naranja), #45494E (gris oscuro), #1c1c1c (negro)\\n\\n### Elementos obligatorios:\\n1. **Header**: Imagen de cabecera (600x400px) con enlace\\n2. **Saludo**: \\\"Hola, [Nombre del Cliente]:\\\" en color #FF4F00, tamaño 24px, bold\\n3. **Contenido principal**: Reproduce exactamente el texto y elementos visuales de la imagen\\n4. **Footer estándar**:\\n   - Logo Credicorp (600x71px)\\n   - Texto legal: \\\"PRIMA AFP S.A. RUC 20510398158\\\"\\n   - Links a redes sociales (Facebook, Instagram, LinkedIn, YouTube)\\n   - Link a prima.com.pe\\n\\n### Especificaciones técnicas:\\n- Usar solo tablas para layout (compatible con Outlook)\\n- Padding consistente: 50px izquierda y derecha para contenido\\n- Espaciado vertical con celdas vacías: \\\"<td width=\\\\\\\"23px\\\\\\\">&nbsp;</td>\\\"\\n- Imágenes disponibles: {{$node['Code - Separar Archivos'].json.elementFiles.map(el => el.id + '.png').join(', ')}}\\n- Rutas de imágenes: /Infografias/{{$node['Code - Separar Archivos'].json.projectName}}/images/\\n- Enlaces: Mantener targets=\\\"_blank\\\" para links externos\\n\\n### Elementos visuales a recrear:\\n- Cards/banners con dimensiones exactas de la imagen\\n- Iconos con texto alineado (usar tablas de 2 columnas)\\n- Botones/CTAs como imágenes con enlaces\\n- Colores destacados en texto usando \\\"<font color=\\\\\\\"FF4F00\\\\\\\">\\\"\\n\\n### Instrucciones específicas:\\n- Reproduce EXACTAMENTE el texto visible en la imagen\\n- Mantén las proporciones y spacing de los elementos\\n- Usa strong/bold para énfasis según se vea en la imagen\\n- Conserva la jerarquía visual (tamaños de fuente, colores)\\n- Asegúrate de que sea responsive manteniendo la estructura de tabla\\n\\n### Contexto del proyecto:\\n- Total de archivos: {{$node['Code - Separar Archivos'].json.totalFiles}}\\n- Elementos disponibles: {{$node['Code - Separar Archivos'].json.elementCount}}\\n- Proyecto: {{$node['Code - Separar Archivos'].json.projectName}}\\n\\nProporciona el código HTML completo, funcional y listo para usar, con comentarios que indiquen las secciones principales del email.\"}, {\"type\": \"image\", \"source\": {\"type\": \"base64\", \"media_type\": \"image/png\", \"data\": \"{{$node['Code - Separar Archivos'].binary.finalInfografia.data}}\"}}]}]"

                }
            ]
            }
        },
        "id": "claude-sonnet-4-api",
        "name": "Claude Sonnet 4",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.1,
        "position": [1340, 300]
        },
        {
        "parameters": {
            "authentication": "oAuth2Api",
            "operation": "upload",
            "resource": "file",
            "siteId": "={{$env.SHAREPOINT_SITE_ID}}",
            "fileName": "={{$json.fileName}}",
            "folderPath": "=/Infografias/{{$json.projectName}}/output/",
            "binaryData": true,
            "binaryPropertyName": "htmlFile"
        },
        "id": "sharepoint-save-html",
        "name": "SharePoint - Guardar HTML",
        "type": "n8n-nodes-base.microsoftSharePoint",
        "typeVersion": 1,
        "position": [1780, 300]
        },
        {
        "parameters": {
            "respondWith": "json",
            "responseBody": "={\n  \"success\": true,\n  \"message\": \"Infografía generada exitosamente\",\n  \"projectName\": \"{{$node['Code - Procesar HTML'].json.projectName}}\",\n  \"files\": {\n    \"html\": \"/output/{{$node['Code - Procesar HTML'].json.fileName}}\",\n    \"sharepoint_url\": \"{{$node['SharePoint - Guardar HTML'].json.webUrl}}\"\n  },\n  \"timestamp\": \"{{new Date().toISOString()}}\"\n}"
        },
        "id": "http-response",
        "name": "Respuesta Final",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [2000, 300]
        }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code - Separar Archivos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code - Separar Archivos": {
      "main": [
        [
          {
            "node": "SharePoint - Crear Carpeta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SharePoint - Crear Carpeta": {
      "main": [
        [
          {
            "node": "Split - Elementos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split - Elementos": {
      "main": [
        [
          {
            "node": "SharePoint - Subir Elementos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SharePoint - Subir Elementos": {
      "main": [
        [
          {
            "node": "Claude Sonnet 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Claude Sonnet 4": {
      "main": [
        [
          {
            "node": "Code - Procesar HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code - Procesar HTML": {
      "main": [
        [
          {
            "node": "SharePoint - Guardar HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SharePoint - Guardar HTML": {
      "main": [
        [
          {
            "node": "Respuesta Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "timezone": "America/Lima"
  }
}